<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/sidebar.css">
    <title>Manage Cuisines</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(90deg, rgba(241,204,162,1) 0%, rgba(107,180,70,1) 50%, rgba(0,245,255,1) 100%);
            /* margin: 10px; */
        }
        .container {
            max-width: 800px;
            margin-left: 600px;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 5px 20px 50px black;
        }
        h1 {
            text-align: center;
        }
        form {
            margin-bottom: 20px;
        }
        form label, form input, form button {
            display: block;
            margin-bottom: 10px;
        }
        form input[type="text"], form input[type="file"] {
            width: calc(100% - 22px);
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        form button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table th, table td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        table th {
            background-color: #f2f2f2;
        }
        table td img {
            max-width: 100px;
            height: auto;
        }
        .edit-btn, .delete-btn {
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            text-decoration: none;
        }
        .delete-btn {
            background-color: #dc3545;
            margin-left: 5px;
        }
    </style>
</head>
<body>

<div class="sidebar">
  <a  href="admin.php">ADMIN</a>
  <a class="active" href="admin-customer.php">Customer</a>
  <a href="admin-cuisine.php">Cuisine</a>
  <a href="admin-pre-book.php">Pre book</a>
  <a href="admin-reservation.php">Reservation</a>
  <a href="admin-employee.php">Employee</a>
  <a href="admin-admin.php">Admin</a>
  <a href="admin-food.php">Food</a>
  <a href="admin-parking.php">Parking</a>
  <a href="../New folder/index.html" onclick="logoutAlert()">LOGOUT</a>
</div>


</body>
</html>




<?php
// Function to establish database connection
function connectDB() {
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "gallerycafe";  // Replace with your actual database name

    $conn = new mysqli($servername, $username, $password, $dbname);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    return $conn;
}

// Handle adding new customer
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["add_customer"])) {
    $username = $_POST["username"];
    $email = $_POST["email"];
    $password = $_POST["password"];
    $contactno = $_POST["contactno"];

    $conn = connectDB();

    $stmt = $conn->prepare("INSERT INTO customer (username, email, password, contactno) VALUES (?, ?, ?, ?)");
    $stmt->bind_param("sssi", $username, $email, $password, $contactno);

    if ($stmt->execute()) {
        echo "<p class='success'>Customer added successfully.</p>";
    } else {
        echo "<p class='error'>Error adding customer: " . $stmt->error . "</p>";
    }

    $stmt->close();
    $conn->close();
}

// Handle updating customer
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["update_customer"])) {
    $customerId = $_POST["customer_id"];
    $username = $_POST["username"];
    $email = $_POST["email"];
    $password = $_POST["password"];
    $contactno = $_POST["contactno"];

    $conn = connectDB();

    $stmt = $conn->prepare("UPDATE customer SET username = ?, email = ?, password = ?, contactno = ? WHERE customer_id = ?");
    $stmt->bind_param("sssii", $username, $email, $password, $contactno, $customerId);

    if ($stmt->execute()) {
        echo "<p class='success'>Customer updated successfully.</p>";
    } else {
        echo "<p class='error'>Error updating customer: " . $stmt->error . "</p>";
    }

    $stmt->close();
    $conn->close();
}

// Handle deleting customer
if ($_SERVER["REQUEST_METHOD"] == "GET" && isset($_GET["action"]) && $_GET["action"] == "delete" && isset($_GET["id"])) {
    $customerId = $_GET["id"];
    $conn = connectDB();

    $stmt = $conn->prepare("DELETE FROM customer WHERE customer_id = ?");
    $stmt->bind_param("i", $customerId);

    if ($stmt->execute()) {
        echo "<p class='success'>Customer deleted successfully.</p>";
    } else {
        echo "<p class='error'>Error deleting customer: " . $stmt->error . "</p>";
    }

    $stmt->close();
    $conn->close();
}

// Fetch customer data for editing
$customer = null;
if (isset($_GET["action"]) && $_GET["action"] == "edit" && isset($_GET["id"])) {
    $customerId = $_GET["id"];
    $conn = connectDB();

    $stmt = $conn->prepare("SELECT customer_id, username, email, password, contactno FROM customer WHERE customer_id = ?");
    $stmt->bind_param("i", $customerId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $customer = $result->fetch_assoc();
    } else {
        echo "<p class='error'>Customer not found.</p>";
    }

    $stmt->close();
    $conn->close();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Customer Management</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }
        table, th, td { border: 1px solid #ddd; }
        th, td { padding: 10px; text-align: left; }
        th { background-color: #f2f2f2; }
        form { margin-bottom: 20px; }
        input[type="text"], input[type="email"], input[type="password"], input[type="number"] { width: 100%; padding: 8px; margin: 4px 0; border: 1px solid #ddd; border-radius: 4px; }
        button { padding: 10px 20px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; }
        button:hover { background-color: #45a049; }
        .success { 
            color: black; 
        display:grid;
    text-align: center;
    margin-left: 200px;
    font-family: monospace;
font-size: xx-large;}
        .error { color: red; }
    </style>
</head>
<body>
    <div class="container">
    <h1>Customer Management</h1>

    <!-- Add Customer Form -->
    <h2>Add New Customer</h2>
    <form action="admin-customer.php" method="post">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>

        <label for="contactno">Contact No:</label>
        <input type="number" id="contactno" name="contactno" required>

        <button type="submit" name="add_customer">Add Customer</button>
    </form>

    <!-- Update Customer Form (if editing) -->
    <?php if ($customer): ?>
    <h2>Update Customer</h2>
    <form action="admin-customer.php" method="post">
        <input type="hidden" name="customer_id" value="<?php echo htmlspecialchars($customer['customer_id'] ?? '', ENT_QUOTES, 'UTF-8'); ?>">

        <label for="username">Username:</label>
        <input type="text" id="username" name="username" value="<?php echo htmlspecialchars($customer['username'] ?? '', ENT_QUOTES, 'UTF-8'); ?>" required>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" value="<?php echo htmlspecialchars($customer['email'] ?? '', ENT_QUOTES, 'UTF-8'); ?>" required>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" value="<?php echo htmlspecialchars($customer['password'] ?? '', ENT_QUOTES, 'UTF-8'); ?>" required>

        <label for="contactno">Contact No:</label>
        <input type="number" id="contactno" name="contactno" value="<?php echo htmlspecialchars($customer['contactno'] ?? '', ENT_QUOTES, 'UTF-8'); ?>" required>

        <button type="submit" name="update_customer">Update Customer</button>
    </form>
    <?php endif; ?>

    <!-- Display Customers Table -->
    <h2>Customer List</h2>
    <table>
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Contact No</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        <?php
        $conn = connectDB();
        $sql = "SELECT customer_id, username, email, contactno FROM customer";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                echo '<tr>';
                echo '<td>' . htmlspecialchars($row["username"], ENT_QUOTES, 'UTF-8') . '</td>';
                echo '<td>' . htmlspecialchars($row["email"], ENT_QUOTES, 'UTF-8') . '</td>';
                echo '<td>' . htmlspecialchars($row["contactno"], ENT_QUOTES, 'UTF-8') . '</td>';
                echo '<td>';
                echo '<a href="admin-customer.php?action=edit&id=' . $row["customer_id"] . '">Edit</a> | ';
                echo '<a href="admin-customer.php?action=delete&id=' . $row["customer_id"] . '" onclick="return confirm(\'Are you sure you want to delete this customer?\');">Delete</a>';
                echo '</td>';
                echo '</tr>';
            }
        } else {
            echo '<tr><td colspan="4">No customers found.</td></tr>';
        }

        $conn->close();
        ?>
        </tbody>
    </table>
    </div>
    <script>  function logoutAlert() {
        alert("Successfully logged out");
        // Optional: Add a delay before redirecting to the logout page
        setTimeout(function() {
            window.location.href = "../New folder/index.html";
        }, 1000); // Adjust the delay as needed
    }</script>
</body>
</html>
